from flask import Blueprint, render_template, abort, redirect, url_for, flash
from flask_login import login_required, current_user
from app.services.club_services import get_club_facility_summary, get_leagues_by_status
from app.forms import SimpleForm

from app.models.teams import Team

blueprint = Blueprint('dashboard_home', __name__)

@blueprint.route('/')
@login_required
def index():
    """
    This function checks if the current user has any active memberships and redirects
    them to the home page of their first team or displays a warning message if
    they are not part of any teams and redirectes them to the user settings page
    for memberships.

    Returns:
        : The output returned by the function `index()` is a HTTP redirect to the
        URL generated by `url_for('.home', team_id=current_user.active_memberships[0].team.id)`
        if the user has active memberships or a Flash message "You are not part
        of any teams" and a redirect to the URL generated by `url_for('user_settings.memberships')`
        otherwise.

    """
    if current_user.active_memberships:
        return redirect(url_for('.home', team_id=current_user.active_memberships[0].team.id))
    else:
        flash("You are not part of any teams", 'warning')
        return redirect(url_for('user_settings.memberships'))

@blueprint.route('/<hashid:team_id>')
@login_required
def home(team_id):
    """
    This function renders the 'dashboard/home.html' template with data including
    the team details and summaries of clubs and leagues the user is a part of.

    Args:
        team_id (int): The `team_id` input parameter specifies the ID of the team
            for which the user wants to see the home page.

    Returns:
        : The function `home` returns a rendering of the `dashboard/home.html`
        template with the following data:
        
        	- `facility_summary`: a dict containing the club facility summaries
        	- `leagues_summary`: a list of dictionaries containing information about
        the leagues
        	- `team`: the Team object corresponding to the current user's team
        	- `club`: the Club object corresponding to the current user's club
        
        Note that the `get_club_facility_summary` and `get_leagues_by_status`
        functions are not shown here.

    """
    team = Team.query.get(team_id)
    if not team or not team.has_member(current_user):
        abort(404)

    facility_summary = get_club_facility_summary(current_user.club.id)
    leagues_summary = get_leagues_by_status(current_user.club.id)
    print(leagues_summary)

    return render_template('dashboard/home.html', facility_summary=facility_summary, leagues=leagues_summary, team=team, club=current_user.club, simple_form=SimpleForm())
    # return render_template('dashboard/home_backup.html', club=current_user.club, team=team)
